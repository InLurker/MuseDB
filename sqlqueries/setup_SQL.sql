CREATE TABLE artist (
	artist_id INT IDENTITY(10001,1) NOT NULL PRIMARY KEY CLUSTERED, -- 5 digits ID
	artist_name NVARCHAR(30) NOT NULL
);

CREATE TABLE album (
	album_id INT IDENTITY(100001,1) NOT NULL PRIMARY KEY CLUSTERED, -- 6 digits ID
	album_name NVARCHAR(40) NOT NULL,
	last_playback DATETIME,
	artist_id INT NOT NULL FOREIGN KEY REFERENCES artist(artist_id) ON DELETE CASCADE
);

CREATE TABLE track (
	track_id INT IDENTITY(1000001,1) NOT NULL PRIMARY KEY CLUSTERED, -- 7 digits ID
	track_name NVARCHAR(60) NOT NULL,
	track_order TINYINT NOT NULL,
	track_duration SMALLINT NOT NULL,
	last_playback DATETIME,
	album_id INT NOT NULL FOREIGN KEY REFERENCES album(album_id) ON DELETE CASCADE
);

CREATE TABLE users (
	username VARCHAR(20) NOT NULL PRIMARY KEY,
	password VARCHAR(28) NOT NULL
);

CREATE TABLE admins (
	username VARCHAR(20) NOT NULL PRIMARY KEY,
	password VARCHAR(28) NOT NULL
);

CREATE TABLE album_submission (
	album_s_id INT IDENTITY(100001,1) NOT NULL PRIMARY KEY CLUSTERED, -- 6 digits ID
	username VARCHAR(20) NOT NULL FOREIGN KEY REFERENCES users(username) ON DELETE CASCADE,
	album_name NVARCHAR(40) NOT NULL,
	artist_id INT NOT NULL FOREIGN KEY REFERENCES artist(artist_id) ON DELETE CASCADE
);

CREATE TABLE track_submission (
	track_s_id INT IDENTITY(1000001,1) NOT NULL PRIMARY KEY CLUSTERED, -- 7 digits ID
	track_name NVARCHAR(60) NOT NULL,
	track_order TINYINT NOT NULL,
	track_duration SMALLINT NOT NULL,
	album_s_id INT NOT NULL FOREIGN KEY REFERENCES album_submission(album_s_id) ON DELETE CASCADE
);

CREATE TABLE album_comment (
	comment_id INT IDENTITY(100000001,1) NOT NULL PRIMARY KEY CLUSTERED, -- 8 digits ID
	album_id INT NOT NULL FOREIGN KEY REFERENCES album(album_id) ON DELETE CASCADE,
	username VARCHAR(20) NOT NULL FOREIGN KEY REFERENCES users(username) ON DELETE CASCADE,
	comment_details NVARCHAR(200) NOT NULL,
	comment_time DATETIME DEFAULT GETDATE() NOT NULL
);
